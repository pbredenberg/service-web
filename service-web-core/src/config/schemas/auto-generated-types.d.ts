/* eslint-disable lines-around-comment, @typescript-eslint/no-type-alias, @typescript-eslint/member-ordering */ // eslint-disable-line max-len
/**
 * This file was automatically generated by json-schema-to-typescript. DO NOT MODIFY IT BY
 * HAND. Instead, modify the source schema file(s), and run grunt
 * build-types-from-json-schemas to regenerate this file.
 *
 * Also, CODE SHOULD NOT USE THE TYPES FROM THIS FILE DIRECTLY. Instead, the types from
 * ServiceWebConfig.d.ts should be used. Because of the difficulty of mapping between
 * schemas and types, not all necessary features can easily be baked into the schemas, so
 * we manually make some tweaks to the auto-generated types and export those mutated types
 * from ServiceWebConfig.d.ts.
 */

export type UnitName = string;

export interface ServiceWebConfig {
   name: UnitName;
   systems: string[];
   systemDefaults?: SystemConfig;
   serviceTypes?: ServiceTypeConfig[];
   deploymentTargets: NamedDeploymentTargetsConfig[];
   [k: string]: any;
}
export interface SystemConfig {
   name?: UnitName;
   services?: string[];
   serviceDefaults?: ServiceConfig;
   [k: string]: any;
}
export interface ServiceConfig {
   name?: UnitName;
   deployment?: {
      target: string;
      [k: string]: any;
   };
   isRootDependency?: boolean;
   dependsOn?: string[];
   [k: string]: any;
}
export interface ServiceTypeConfig {
   name: UnitName;
   commands: {
      /**
       * This interface was referenced by `undefined`'s JSON-Schema definition
       * via the `patternProperty` ".*".
       */
      [k: string]: string;
   };
   [k: string]: any;
}
export interface NamedDeploymentTargetsConfig {
   name: string;
   targets: DeploymentTargetConfig[];
   [k: string]: any;
}
export interface DeploymentTargetConfig {
   region: string;
   environmentGroup: string;
   environment: string;
   [k: string]: any;
}
